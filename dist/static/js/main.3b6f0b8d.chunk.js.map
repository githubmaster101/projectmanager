{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","serviceWorker.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","firebase","status","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","timestamp","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleSubmit","e","preventDefault","_this","signIn","handleChange","setState","Object","defineProperty","target","value","authError","onSubmit","htmlFor","onChange","creds","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","initState","authReducer","arguments","length","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Boolean","window","location","hostname","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b6f0b8d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/create'>New Project</NavLink></li>\r\n      <li><a onClick={props.signOut}>Log Out</a></li>\r\n      <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n    </ul >\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = (creds) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            creds.email,\r\n            creds.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err });\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li >\r\n        </ul >\r\n    );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  //display sign in status\r\n  const status = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n  return (\r\n    <nav className=\"nav-wrapper blue darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          Project Plans\r\n        </Link>\r\n        {status}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);\r\n\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(notification => {\r\n                            return (\r\n                                <li key={notification.id}>\r\n                                    <span className=\"pink-text\">{notification.user} </span>\r\n                                    <span>{notification.content}</span>\r\n                                    <div className=\"grey-text notification-date\">\r\n                                        {moment(notification.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notifications;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName} </p>\r\n                <p className=\"grey-text\">{moment(project.timestamp.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className=\"project-list section\" >\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notifications } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['timestamp', 'desc'] },\r\n        { collection: 'notifications', limit: 5, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content} </p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName} </div>\r\n                        <div>{moment(project.timestamp.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{\r\n        collection: 'projects'\r\n    }])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) { return <Redirect to='/' /> }\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError} </p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn orange darken-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError} </p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database \r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            timestamp: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const initState = {\r\n    authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login Error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login Successful')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('Sign out successful')\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('Signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n    projects: [\r\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\r\n    ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('Created new project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyCns6BzmPdTEQ9ddql_3TmVZa1YJKKDfD0\",\r\n    authDomain: \"kevin-projectmanager.firebaseapp.com\",\r\n    databaseURL: \"https://kevin-projectmanager.firebaseio.com\",\r\n    projectId: \"kevin-projectmanager\",\r\n    storageBucket: \"kevin-projectmanager.appspot.com\",\r\n    messagingSenderId: \"1074247434093\"\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n})\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}